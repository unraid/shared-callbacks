name: Build and Publish
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      body: ${{ steps.release.outputs.body }}
    steps:
      - uses: googleapis/release-please-action@v4
        if: github.ref == 'refs/heads/main'
        id: release
        with:
          release-type: node
  build:
    runs-on: ubuntu-latest
    needs: [release-please]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: pnpm install
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: test
        run: pnpm run test:coverage

      - name: Setup NPM Authentication
        if: ${{ needs.release-please.outputs.release_created }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish to NPM
        if: ${{ needs.release-please.outputs.release_created }}
        run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Send Discord notification
        if: ${{ needs.release-please.outputs.release_created }}
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            ðŸ“š Shared Callback Library ${{ needs.release-please.outputs.tag_name }} created!

            **Changelog:**
            ${{ needs.release-please.outputs.body }}
